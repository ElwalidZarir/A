{"version":3,"sources":["components/TodoList.js","components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","todos","setTodos","onSubmit","todo","text","newTodos","console","log","TodoForm","props","task","setTask","className","e","preventDefault","id","Math","floor","random","type","placeholder","value","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA4BeA,MAzBf,WAAoB,MAGUC,mBAAS,IAHnB,mBAGTC,EAHS,KAGFC,EAHE,KAgBhB,OACI,gCACI,6CACA,cAAC,EAAD,CAAUD,MAAOA,EAAOE,SAdhB,SAAAC,GACZ,GAAIA,EAAKC,KAAT,CAIA,IAAMC,EAAQ,CAAIF,GAAJ,mBAAaH,IAE3BC,EAASI,GACTC,QAAQC,IAAIJ,WCwBLK,MAtCf,SAAkBC,GAAO,MAGGV,mBAAS,IAHZ,mBAGdW,EAHc,KAGRC,EAHQ,KAuBrB,OACI,uBAAMC,UAAY,YAAYV,SAdb,SAAAW,GAEjBA,EAAEC,iBAEFL,EAAMP,SAAS,CACXa,GAAGC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBd,KAAKM,IAGTC,EAAQ,KAKR,UACI,uBACIQ,KAAO,OACPC,YAAc,aACdC,MAAOX,EACPY,KAAK,OACLV,UAAU,eAGd,wBAAQA,UAAU,cAAlB,qBCtBGW,MARf,WACE,OACE,qBAAKX,UAAU,WAAf,SACE,cAAC,EAAD,OCISY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.92c54573.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n\r\n    //declaring state variable which we will call todos\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo =>{       //add a task\r\n        if(!todo.text){\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n        console.log(todo);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>tasks to do</h1>\r\n            <TodoForm todos={todos} onSubmit = {addTodo}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, {useState} from 'react'\r\nimport TodoList from './TodoList'\r\nfunction TodoForm(props) {\r\n\r\n    //declaring state variable which we will call task\r\n    const [task, setTask] = useState('');\r\n\r\n\r\n    const handleChange = e => {\r\n        setTask(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id:Math.floor(Math.random() * 200),\r\n            text:task\r\n        });\r\n\r\n        setTask('');\r\n        \r\n    }\r\n\r\n    return (\r\n        <form className = 'todo-form' onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                placeholder = \"add a todo\"\r\n                value={task}\r\n                name=\"text\"\r\n                className=\"todo-input\"\r\n                \r\n            />\r\n            <button className=\"todo-button\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import './App.css';\nimport TodoForm from './components/TodoForm.js'\nimport TodoList from './components/TodoList.js'\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \nreportWebVitals();\n"],"sourceRoot":""}